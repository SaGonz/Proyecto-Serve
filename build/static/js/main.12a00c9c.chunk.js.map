{"version":3,"sources":["components/formulario.jsx","components/botonborrar.jsx","components/botoncompletar.jsx","components/itemtarea.jsx","components/tareas.jsx","components/completas.jsx","App.js","serviceWorker.js","index.js"],"names":["Formulario","props","handleChoice","event","value","target","console","log","urgencia","setState","categoria","addTarea","_","state","fetch","process","valor","then","obtenerTareas","catch","err","error","fecha_creacion","handleChange","bind","handleSubmit","preventDefault","length","this","onSubmit","type","pattern","onChange","onClick","handleClick","id","name","className","defaultValue","Component","BotonBorrar","handleBorrar","e","borrarTarea","idTarea","idBorrar","callbackPadre","refrescarInfoServidor","BotonCompletar","ItemTarea","id_tarea","titulo","id_categoria","fechaFormateada","moment","format","key","Tareas","encontrarCategorias","lista","unicasCategorias","Set","forEach","item","add","ordenarPorCategoria","tareas","categorias","ordenadasPorCategoria","filter","tarea","mostrarPorCategoria","tareasOrdenadas","Object","entries","renderTareas","listaDeTareas","map","Completas","fecha_finalizacion","getTareasCompletadas","respuesta","json","data","getTiempoTranscurrido","inicio","fin","finicio","ffin","diff","App","getTareas","estado","document","title","to","style","textDecoration","exact","path","backgroundColor","Math","random","toString","slice","React","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.12a00c9c.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass Formulario extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            valor: '', \n            fecha_creacion: '',\n            categoria: 'urgente importante',\n            error: ''\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleClick(event) {\n        event.target.value = ''\n    }\n    handleChange(event) {\n        event.preventDefault()\n\n        const {value} = event.target\n        if(value.length < 45) {\n            this.setState({error: ''})\n            this.setState({valor: event.target.value})  \n        } else {\n            this.setState({error: 'El tÃ­tulo de tu tarea es demasiado largo.'})\n            \n        }\n    }\n    handleSubmit(event) {\n        event.preventDefault()\n        this.addTarea()\n    }\n\n    handleChoice = (event) => {\n        const {value} = event.target\n        console.log('value,',value)\n        let urgencia = ''\n\n        switch(value) {\n            case 'ui':\n                    urgencia = 'urgente importante'\n                break;\n            case 'uni':\n                    urgencia = 'urgente no importante'\n                break;\n            case 'nui':\n                    urgencia = 'no urgente importante'\n                break;\n            case 'nuni':\n                    urgencia = 'no urgente no importante'\n                break;\n            default:\n                    urgencia = 'urgente importante'\n                break;\n        }\n\n        this.setState({categoria: urgencia})\n    }\n\n    addTarea = _ => {\n        const categoria = this.state.categoria\n        fetch(`http://${process.env.REACT_APP_HOST_AND_PORT}/llenar?titulo=${this.state.valor}&id_categoria=${categoria}`)\n        .then(this.props.obtenerTareas())\n        .catch(err => console.error(err))\n        console.log('tarea enviada')\n    }\n\n    render() {\n        return(\n            <form onSubmit={this.handleSubmit}>\n                <input type=\"text\" pattern=\"\\/\\:\\&\\'\\$\\=\" value={this.state.valor} onChange={this.handleChange} onClick={this.handleClick}/>\n                <select id=\"categoria\" name=\"urgencia\" onClick={this.handleChoice} className=\"dropdown\">\n                    <option value=\"ui\" defaultValue>urgente importante</option>\n                    <option value=\"uni\">urgente no importante</option>\n                    <option value=\"nui\">no urgente importante</option>\n                    <option value=\"nuni\">no urgente no importante</option>\n                </select>\n                <input type=\"submit\" className=\"boton-envio\" value=\"Iniciar\"/>\n                <div className=\"error\">{this.state.error}</div>\n            </form>\n        )\n    }\n}\n\nexport default Formulario","import React, { Component } from 'react'\n\nclass BotonBorrar extends Component {\n\n    handleBorrar = (e) => {\n        this.borrarTarea(this.props.idTarea)\n    }\n    borrarTarea = (idBorrar) => {\n        fetch(`http://`+process.env.REACT_APP_HOST_AND_PORT+`/borrar?id_tarea=${idBorrar}`)\n        .then(this.callbackPadre)\n        .catch(err => console.log(err))\n    }\n    callbackPadre = _ => {\n        this.props.refrescarInfoServidor()\n    }\n\n    render() {\n        return(\n            <button className=\"boton-borrar\" onClick={this.handleBorrar}>x</button>\n        )\n    }\n}\n\nexport default BotonBorrar;","import React, { Component } from 'react';\n// import useSound from 'use-sound';\n//import completado from './../sounds/256112__nckn__pleasant-done-notification.mp3'\n\n//const [playOn] = useSound( './../sounds/256112__nckn__pleasant-done-notification.mp3')\n    \nclass BotonCompletar extends Component {\n    \n    \n    handleClick = () => {\n        fetch(`http://${process.env.REACT_APP_HOST_AND_PORT}/completar?id_tarea=${this.props.idTarea}`)\n        .then(this.callbackPadre)\n        \n        // useSound('./../sounds/256112__nckn__pleasant-done-notification.mp3')\n    }\n    callbackPadre = () => {\n        this.props.refrescarInfoServidor()\n    }\n\n    render() {\n        return (\n            <input className=\"boton-completar\" type=\"checkbox\" \n            onClick={this.handleClick} onChange={this.handleChange}/>\n        )\n    }\n}\n\nexport default BotonCompletar;","import React from 'react'\nimport BotonBorrar from './botonborrar'\nimport BotonCompletar from './botoncompletar'\nimport moment from 'moment'\n\nexport const ItemTarea = ({ id_tarea, titulo, id_categoria, fecha_creacion, refrescarInfoServidor }) => {\n    const fechaFormateada = moment(fecha_creacion).format('DD-MM-YY LT')\n\n    console.log('titulo tarea:',titulo)\n    return  <label className=\"tarea\" key={id_tarea}> \n                <BotonCompletar idTarea={id_tarea} refrescarInfoServidor={refrescarInfoServidor}/> \n                <p>{titulo}</p>\n                <button className=\"fecha\">{id_categoria}</button>\n                <button className=\"fecha\">\n                    {fechaFormateada}\n                </button>\n                <BotonBorrar idTarea={id_tarea} refrescarInfoServidor={refrescarInfoServidor}/>\n            </label>   \n\n}","import React, { Component } from 'react'\nimport Formulario from './formulario'\nimport { ItemTarea } from './itemtarea'\nimport 'moment-timezone';\n\nclass Tareas extends Component {\n\n    encontrarCategorias = (lista) => {\n        const unicasCategorias = new Set()\n        lista.forEach(item => {\n            unicasCategorias.add(item.id_categoria)\n        })\n        return unicasCategorias\n    }\n\n    ordenarPorCategoria = (tareas) => {\n        const categorias = this.encontrarCategorias(tareas)\n        const ordenadasPorCategoria = {}\n        for (const categoria of categorias) {\n            ordenadasPorCategoria[categoria] = tareas.filter(tarea => tarea.id_categoria === categoria)\n        }\n        return ordenadasPorCategoria\n    }\n    mostrarPorCategoria = (tareasOrdenadas) => {\n        for (let [key,value] of Object.entries(tareasOrdenadas)) {\n            console.log(key,value)\n        }\n    }\n    renderTareas = () => { \n        console.log(this.ordenarPorCategoria(this.props.listaDeTareas))\n        console.log('tareas urg.im.',this.ordenarPorCategoria(this.props.listaDeTareas)['urgente importante'])\n  \n        this.mostrarPorCategoria(this.ordenarPorCategoria(this.props.listaDeTareas))\n        return this.props.listaDeTareas.map(\n            (item) => \n            <ItemTarea { ...item } refrescarInfoServidor={this.props.refrescarInfoServidor}/>\n        )\n        // return Object.entries(this.ordenarPorCategoria(this.props.listaDeTareas)).map(\n            // (categoria) =>\n            // categoria.map(\n                // (item) =>\n                // <ItemTarea { ...item } refrescarInfoServidor={this.props.refrescarInfoServidor}/>\n            // ) \n        // )  \n    }\n    render() { \n        return ( \n            <div>\n                <Formulario listaDeTareas={this.props.listaDeTareas} obtenerTareas={this.props.obtenerTareas}/>\n                <div className=\"tareas-container\">\n                {this.props.listaDeTareas.length === 0 && <div className=\"tarea\">MÃ¡rcate un propÃ³sito</div>}\n                {this.renderTareas()}\n                </div>\n            </div>\n        )\n    }\n}\n \nexport default Tareas ","import React, { Component } from 'react'\nimport 'moment-timezone';\nimport moment from 'moment-timezone';\n\nclass Completas extends Component {\n\n    state = { \n        tareas: [],\n        id_tarea: null,\n        titulo: null,\n        fecha_creacion: null,\n        fecha_finalizacion: null\n    }\n\n    componentDidMount() {\n        this.getTareasCompletadas()\n    }\n    getTareasCompletadas = _ => {\n        fetch(`http://`+process.env.REACT_APP_HOST_AND_PORT+`/api/completadas`)\n        .then(respuesta => respuesta.json())\n        .then(respuesta => this.setState({tareas: respuesta.data}))\n        .catch(err => console.log(err))\n        console.log('getTareasCompletadas',this.state.tareas)\n    }\n    getTiempoTranscurrido = (inicio, fin) => {\n        let finicio = moment(inicio)\n        let ffin = moment(fin)\n        let tiempo = ''\n\n        ffin.diff(finicio, 'minutes') > 59 ?\n            (ffin.diff(finicio, 'hours') > 24 \n                ? tiempo = ffin.diff(finicio, 'days') + \" dÃ­as\" \n                : tiempo = ffin.diff(finicio, 'hours') + \" horas\"\n            )\n        : tiempo = ffin.diff(finicio, 'minutes') + \" minutos\"\n        \n        return tiempo\n    }\n\n    renderTareas = () => { \n        return this.state.tareas.map(\n            ({id_tarea, titulo, fecha_creacion, fecha_finalizacion}) => \n            <label className=\"tarea completada\" key={id_tarea}>\n            {titulo}\n            <button className=\"fecha\">({this.getTiempoTranscurrido(fecha_creacion,fecha_finalizacion)})</button>\n            </label>\n        )\n    }\n    render() { \n        return ( \n            <div className=\"tareas-container\">\n                {this.state.tareas.length === 0 && <div className=\"tarea\"> AÃºn no completaste ninguna tarea</div>}\n                {this.renderTareas()}\n            </div>\n        )\n    }\n}\n \nexport default Completas ","import React from 'react'\nimport './App.css'\nimport Tareas from './components/tareas'\nimport Completas from './components/completas';\nimport { BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      tareas: [],\n      tarea: {\n        titulo: '',\n        fecha_creacion: null,\n        estado: '',\n        categoria: ''\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.getTareas()\n    document.title = \"Lista de tareas\"\n  }\n\n  //Llamar a Endpoint para conseguir todas las tareas\n  getTareas = _ => {\n    fetch(`http://`+process.env.REACT_APP_HOST_AND_PORT +`/api/tareas`)\n    .then(respuesta => respuesta.json())\n    .then(respuesta => this.setState({tareas: respuesta.data}))\n    .catch(err => console.log(err))\n    console.log('getTareas a endpoint')\n  }\n  \n  refrescarInfoServidor = _ => {\n    this.getTareas()\n  }\n\n  render(){\n    const {tareas, tarea} = this.state \n    return (\n      <Router>\n        <div className=\"link-container\">\n          <li className=\"link\"><Link to=\"/\">INICIO</Link></li>\n          <li className=\"link\"><Link to=\"/completadas\" style={{textDecoration: 'none'}}>TAREAS COMPLETADAS</Link></li>\n        </div>\n\n        <Switch>\n          <Route exact path=\"/\">\n            <div className=\"App\" style={{backgroundColor: \"#\"+ Math.random().toString(16).slice(2, 8)}}>\n              <Tareas listaDeTareas={this.state.tareas} obtenerTareas={this.getTareas} refrescarInfoServidor={this.refrescarInfoServidor}/>\n            </div>\n          </Route>\n          <Route path=\"/completadas\">\n            <div className=\"App\" style={{backgroundColor: \"#\"+ Math.random().toString(16).slice(2, 8)}}>\n              <Completas/>\n            </div>\n          </Route>\n        </Switch>\n      </Router>\n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App className=\"root\"/>, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}